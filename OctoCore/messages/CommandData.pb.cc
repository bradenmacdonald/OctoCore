// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommandData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CommandData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace Octo {

void protobuf_ShutdownFile_CommandData_2eproto() {
  delete CommandData::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_CommandData_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_CommandData_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::Octo::protobuf_AddDesc_GenericValue_2eproto();
  CommandData::default_instance_ = new CommandData();
  CommandData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CommandData_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_CommandData_2eproto_once_);
void protobuf_AddDesc_CommandData_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_CommandData_2eproto_once_,
                 &protobuf_AddDesc_CommandData_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CommandData_2eproto {
  StaticDescriptorInitializer_CommandData_2eproto() {
    protobuf_AddDesc_CommandData_2eproto();
  }
} static_descriptor_initializer_CommandData_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int CommandData::kCommandIdFieldNumber;
const int CommandData::kArgsFieldNumber;
const int CommandData::kResultFieldNumber;
#endif  // !_MSC_VER

CommandData::CommandData()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Octo.CommandData)
}

void CommandData::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  args_ = const_cast< ::Octo::MapValue*>(
      ::Octo::MapValue::internal_default_instance());
#else
  args_ = const_cast< ::Octo::MapValue*>(&::Octo::MapValue::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  result_ = const_cast< ::Octo::MapValue*>(
      ::Octo::MapValue::internal_default_instance());
#else
  result_ = const_cast< ::Octo::MapValue*>(&::Octo::MapValue::default_instance());
#endif
}

CommandData::CommandData(const CommandData& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Octo.CommandData)
}

void CommandData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_id_ = 0;
  args_ = NULL;
  result_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CommandData::~CommandData() {
  // @@protoc_insertion_point(destructor:Octo.CommandData)
  SharedDtor();
}

void CommandData::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete args_;
    delete result_;
  }
}

void CommandData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const CommandData& CommandData::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_CommandData_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_CommandData_2eproto();
#endif
  return *default_instance_;
}

CommandData* CommandData::default_instance_ = NULL;

CommandData* CommandData::New(::google::protobuf::Arena* arena) const {
  CommandData* n = new CommandData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommandData::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    command_id_ = 0;
    if (has_args()) {
      if (args_ != NULL) args_->::Octo::MapValue::Clear();
    }
    if (has_result()) {
      if (result_ != NULL) result_->::Octo::MapValue::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CommandData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:Octo.CommandData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 command_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &command_id_)));
          set_has_command_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_args;
        break;
      }

      // optional .Octo.MapValue args = 2;
      case 2: {
        if (tag == 18) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_args()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_result;
        break;
      }

      // optional .Octo.MapValue result = 3;
      case 3: {
        if (tag == 26) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Octo.CommandData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Octo.CommandData)
  return false;
#undef DO_
}

void CommandData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Octo.CommandData)
  // optional int32 command_id = 1;
  if (has_command_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->command_id(), output);
  }

  // optional .Octo.MapValue args = 2;
  if (has_args()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->args_, output);
  }

  // optional .Octo.MapValue result = 3;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->result_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:Octo.CommandData)
}

int CommandData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 command_id = 1;
    if (has_command_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->command_id());
    }

    // optional .Octo.MapValue args = 2;
    if (has_args()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->args_);
    }

    // optional .Octo.MapValue result = 3;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->result_);
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommandData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const CommandData*>(&from));
}

void CommandData::MergeFrom(const CommandData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_command_id()) {
      set_command_id(from.command_id());
    }
    if (from.has_args()) {
      mutable_args()->::Octo::MapValue::MergeFrom(from.args());
    }
    if (from.has_result()) {
      mutable_result()->::Octo::MapValue::MergeFrom(from.result());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void CommandData::CopyFrom(const CommandData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandData::IsInitialized() const {

  return true;
}

void CommandData::Swap(CommandData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandData::InternalSwap(CommandData* other) {
  std::swap(command_id_, other->command_id_);
  std::swap(args_, other->args_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string CommandData::GetTypeName() const {
  return "Octo.CommandData";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommandData

// optional int32 command_id = 1;
bool CommandData::has_command_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CommandData::set_has_command_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CommandData::clear_has_command_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CommandData::clear_command_id() {
  command_id_ = 0;
  clear_has_command_id();
}
 ::google::protobuf::int32 CommandData::command_id() const {
  // @@protoc_insertion_point(field_get:Octo.CommandData.command_id)
  return command_id_;
}
 void CommandData::set_command_id(::google::protobuf::int32 value) {
  set_has_command_id();
  command_id_ = value;
  // @@protoc_insertion_point(field_set:Octo.CommandData.command_id)
}

// optional .Octo.MapValue args = 2;
bool CommandData::has_args() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CommandData::set_has_args() {
  _has_bits_[0] |= 0x00000002u;
}
void CommandData::clear_has_args() {
  _has_bits_[0] &= ~0x00000002u;
}
void CommandData::clear_args() {
  if (args_ != NULL) args_->::Octo::MapValue::Clear();
  clear_has_args();
}
const ::Octo::MapValue& CommandData::args() const {
  // @@protoc_insertion_point(field_get:Octo.CommandData.args)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return args_ != NULL ? *args_ : *default_instance().args_;
#else
  return args_ != NULL ? *args_ : *default_instance_->args_;
#endif
}
::Octo::MapValue* CommandData::mutable_args() {
  set_has_args();
  if (args_ == NULL) {
    args_ = new ::Octo::MapValue;
  }
  // @@protoc_insertion_point(field_mutable:Octo.CommandData.args)
  return args_;
}
::Octo::MapValue* CommandData::release_args() {
  clear_has_args();
  ::Octo::MapValue* temp = args_;
  args_ = NULL;
  return temp;
}
void CommandData::set_allocated_args(::Octo::MapValue* args) {
  delete args_;
  args_ = args;
  if (args) {
    set_has_args();
  } else {
    clear_has_args();
  }
  // @@protoc_insertion_point(field_set_allocated:Octo.CommandData.args)
}

// optional .Octo.MapValue result = 3;
bool CommandData::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CommandData::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
void CommandData::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
void CommandData::clear_result() {
  if (result_ != NULL) result_->::Octo::MapValue::Clear();
  clear_has_result();
}
const ::Octo::MapValue& CommandData::result() const {
  // @@protoc_insertion_point(field_get:Octo.CommandData.result)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return result_ != NULL ? *result_ : *default_instance().result_;
#else
  return result_ != NULL ? *result_ : *default_instance_->result_;
#endif
}
::Octo::MapValue* CommandData::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::Octo::MapValue;
  }
  // @@protoc_insertion_point(field_mutable:Octo.CommandData.result)
  return result_;
}
::Octo::MapValue* CommandData::release_result() {
  clear_has_result();
  ::Octo::MapValue* temp = result_;
  result_ = NULL;
  return temp;
}
void CommandData::set_allocated_result(::Octo::MapValue* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:Octo.CommandData.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Octo

// @@protoc_insertion_point(global_scope)
