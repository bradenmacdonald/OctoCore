// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GenericValue.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GenericValue.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace Octo {

void protobuf_ShutdownFile_GenericValue_2eproto() {
  delete ListValue::default_instance_;
  delete Int64ListValue::default_instance_;
  delete StringListValue::default_instance_;
  delete MapValue::default_instance_;
  delete SMapValue::default_instance_;
  delete GenericValue::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_GenericValue_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_GenericValue_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ListValue::default_instance_ = new ListValue();
  Int64ListValue::default_instance_ = new Int64ListValue();
  StringListValue::default_instance_ = new StringListValue();
  MapValue::default_instance_ = new MapValue();
  SMapValue::default_instance_ = new SMapValue();
  GenericValue::default_instance_ = new GenericValue();
  ListValue::default_instance_->InitAsDefaultInstance();
  Int64ListValue::default_instance_->InitAsDefaultInstance();
  StringListValue::default_instance_->InitAsDefaultInstance();
  MapValue::default_instance_->InitAsDefaultInstance();
  SMapValue::default_instance_->InitAsDefaultInstance();
  GenericValue::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GenericValue_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_GenericValue_2eproto_once_);
void protobuf_AddDesc_GenericValue_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_GenericValue_2eproto_once_,
                 &protobuf_AddDesc_GenericValue_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GenericValue_2eproto {
  StaticDescriptorInitializer_GenericValue_2eproto() {
    protobuf_AddDesc_GenericValue_2eproto();
  }
} static_descriptor_initializer_GenericValue_2eproto_;
#endif

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int ListValue::kEntriesFieldNumber;
#endif  // !_MSC_VER

ListValue::ListValue()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Octo.ListValue)
}

void ListValue::InitAsDefaultInstance() {
}

ListValue::ListValue(const ListValue& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Octo.ListValue)
}

void ListValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ListValue::~ListValue() {
  // @@protoc_insertion_point(destructor:Octo.ListValue)
  SharedDtor();
}

void ListValue::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ListValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ListValue& ListValue::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_GenericValue_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_GenericValue_2eproto();
#endif
  return *default_instance_;
}

ListValue* ListValue::default_instance_ = NULL;

ListValue* ListValue::New(::google::protobuf::Arena* arena) const {
  ListValue* n = new ListValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListValue::Clear() {
  entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ListValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:Octo.ListValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Octo.GenericValue entries = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Octo.ListValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Octo.ListValue)
  return false;
#undef DO_
}

void ListValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Octo.ListValue)
  // repeated .Octo.GenericValue entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->entries(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:Octo.ListValue)
}

int ListValue::ByteSize() const {
  int total_size = 0;

  // repeated .Octo.GenericValue entries = 1;
  total_size += 1 * this->entries_size();
  for (int i = 0; i < this->entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entries(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ListValue*>(&from));
}

void ListValue::MergeFrom(const ListValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entries_.MergeFrom(from.entries_);
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ListValue::CopyFrom(const ListValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListValue::IsInitialized() const {

  return true;
}

void ListValue::Swap(ListValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListValue::InternalSwap(ListValue* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string ListValue::GetTypeName() const {
  return "Octo.ListValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListValue

// repeated .Octo.GenericValue entries = 1;
int ListValue::entries_size() const {
  return entries_.size();
}
void ListValue::clear_entries() {
  entries_.Clear();
}
const ::Octo::GenericValue& ListValue::entries(int index) const {
  // @@protoc_insertion_point(field_get:Octo.ListValue.entries)
  return entries_.Get(index);
}
::Octo::GenericValue* ListValue::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:Octo.ListValue.entries)
  return entries_.Mutable(index);
}
::Octo::GenericValue* ListValue::add_entries() {
  // @@protoc_insertion_point(field_add:Octo.ListValue.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::Octo::GenericValue >*
ListValue::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:Octo.ListValue.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::Octo::GenericValue >&
ListValue::entries() const {
  // @@protoc_insertion_point(field_list:Octo.ListValue.entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Int64ListValue::kEntriesFieldNumber;
#endif  // !_MSC_VER

Int64ListValue::Int64ListValue()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Octo.Int64ListValue)
}

void Int64ListValue::InitAsDefaultInstance() {
}

Int64ListValue::Int64ListValue(const Int64ListValue& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Octo.Int64ListValue)
}

void Int64ListValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Int64ListValue::~Int64ListValue() {
  // @@protoc_insertion_point(destructor:Octo.Int64ListValue)
  SharedDtor();
}

void Int64ListValue::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Int64ListValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Int64ListValue& Int64ListValue::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_GenericValue_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_GenericValue_2eproto();
#endif
  return *default_instance_;
}

Int64ListValue* Int64ListValue::default_instance_ = NULL;

Int64ListValue* Int64ListValue::New(::google::protobuf::Arena* arena) const {
  Int64ListValue* n = new Int64ListValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Int64ListValue::Clear() {
  entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Int64ListValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:Octo.Int64ListValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed64 entries = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_entries())));
        } else if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 1, 10, input, this->mutable_entries())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Octo.Int64ListValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Octo.Int64ListValue)
  return false;
#undef DO_
}

void Int64ListValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Octo.Int64ListValue)
  // repeated sfixed64 entries = 1 [packed = true];
  if (this->entries_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_entries_cached_byte_size_);
  }
  for (int i = 0; i < this->entries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64NoTag(
      this->entries(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:Octo.Int64ListValue)
}

int Int64ListValue::ByteSize() const {
  int total_size = 0;

  // repeated sfixed64 entries = 1 [packed = true];
  {
    int data_size = 0;
    data_size = 8 * this->entries_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _entries_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Int64ListValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Int64ListValue*>(&from));
}

void Int64ListValue::MergeFrom(const Int64ListValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entries_.MergeFrom(from.entries_);
  mutable_unknown_fields()->append(from.unknown_fields());
}

void Int64ListValue::CopyFrom(const Int64ListValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64ListValue::IsInitialized() const {

  return true;
}

void Int64ListValue::Swap(Int64ListValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int64ListValue::InternalSwap(Int64ListValue* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Int64ListValue::GetTypeName() const {
  return "Octo.Int64ListValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Int64ListValue

// repeated sfixed64 entries = 1 [packed = true];
int Int64ListValue::entries_size() const {
  return entries_.size();
}
void Int64ListValue::clear_entries() {
  entries_.Clear();
}
 ::google::protobuf::int64 Int64ListValue::entries(int index) const {
  // @@protoc_insertion_point(field_get:Octo.Int64ListValue.entries)
  return entries_.Get(index);
}
 void Int64ListValue::set_entries(int index, ::google::protobuf::int64 value) {
  entries_.Set(index, value);
  // @@protoc_insertion_point(field_set:Octo.Int64ListValue.entries)
}
 void Int64ListValue::add_entries(::google::protobuf::int64 value) {
  entries_.Add(value);
  // @@protoc_insertion_point(field_add:Octo.Int64ListValue.entries)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Int64ListValue::entries() const {
  // @@protoc_insertion_point(field_list:Octo.Int64ListValue.entries)
  return entries_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Int64ListValue::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:Octo.Int64ListValue.entries)
  return &entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int StringListValue::kEntriesFieldNumber;
#endif  // !_MSC_VER

StringListValue::StringListValue()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Octo.StringListValue)
}

void StringListValue::InitAsDefaultInstance() {
}

StringListValue::StringListValue(const StringListValue& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Octo.StringListValue)
}

void StringListValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StringListValue::~StringListValue() {
  // @@protoc_insertion_point(destructor:Octo.StringListValue)
  SharedDtor();
}

void StringListValue::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void StringListValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StringListValue& StringListValue::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_GenericValue_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_GenericValue_2eproto();
#endif
  return *default_instance_;
}

StringListValue* StringListValue::default_instance_ = NULL;

StringListValue* StringListValue::New(::google::protobuf::Arena* arena) const {
  StringListValue* n = new StringListValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringListValue::Clear() {
  entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StringListValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:Octo.StringListValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string entries = 1;
      case 1: {
        if (tag == 10) {
         parse_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_entries;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Octo.StringListValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Octo.StringListValue)
  return false;
#undef DO_
}

void StringListValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Octo.StringListValue)
  // repeated string entries = 1;
  for (int i = 0; i < this->entries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->entries(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:Octo.StringListValue)
}

int StringListValue::ByteSize() const {
  int total_size = 0;

  // repeated string entries = 1;
  total_size += 1 * this->entries_size();
  for (int i = 0; i < this->entries_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->entries(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringListValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StringListValue*>(&from));
}

void StringListValue::MergeFrom(const StringListValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entries_.MergeFrom(from.entries_);
  mutable_unknown_fields()->append(from.unknown_fields());
}

void StringListValue::CopyFrom(const StringListValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringListValue::IsInitialized() const {

  return true;
}

void StringListValue::Swap(StringListValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringListValue::InternalSwap(StringListValue* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string StringListValue::GetTypeName() const {
  return "Octo.StringListValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringListValue

// repeated string entries = 1;
int StringListValue::entries_size() const {
  return entries_.size();
}
void StringListValue::clear_entries() {
  entries_.Clear();
}
 const ::std::string& StringListValue::entries(int index) const {
  // @@protoc_insertion_point(field_get:Octo.StringListValue.entries)
  return entries_.Get(index);
}
 ::std::string* StringListValue::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:Octo.StringListValue.entries)
  return entries_.Mutable(index);
}
 void StringListValue::set_entries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Octo.StringListValue.entries)
  entries_.Mutable(index)->assign(value);
}
 void StringListValue::set_entries(int index, const char* value) {
  entries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Octo.StringListValue.entries)
}
 void StringListValue::set_entries(int index, const char* value, size_t size) {
  entries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Octo.StringListValue.entries)
}
 ::std::string* StringListValue::add_entries() {
  return entries_.Add();
}
 void StringListValue::add_entries(const ::std::string& value) {
  entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Octo.StringListValue.entries)
}
 void StringListValue::add_entries(const char* value) {
  entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Octo.StringListValue.entries)
}
 void StringListValue::add_entries(const char* value, size_t size) {
  entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Octo.StringListValue.entries)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringListValue::entries() const {
  // @@protoc_insertion_point(field_list:Octo.StringListValue.entries)
  return entries_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
StringListValue::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:Octo.StringListValue.entries)
  return &entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MapValue::kEntriesFieldNumber;
#endif  // !_MSC_VER

MapValue::MapValue()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Octo.MapValue)
}

void MapValue::InitAsDefaultInstance() {
}

MapValue::MapValue(const MapValue& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Octo.MapValue)
}

void MapValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MapValue::~MapValue() {
  // @@protoc_insertion_point(destructor:Octo.MapValue)
  SharedDtor();
}

void MapValue::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void MapValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const MapValue& MapValue::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_GenericValue_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_GenericValue_2eproto();
#endif
  return *default_instance_;
}

MapValue* MapValue::default_instance_ = NULL;

MapValue* MapValue::New(::google::protobuf::Arena* arena) const {
  MapValue* n = new MapValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapValue::Clear() {
  entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MapValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:Octo.MapValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<fixed32, .Octo.GenericValue> entries = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entries:
          ::google::protobuf::scoped_ptr<MapValue_EntriesEntry> entry(entries_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_entries())[entry->key()].Swap(entry->mutable_value());
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Octo.MapValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Octo.MapValue)
  return false;
#undef DO_
}

void MapValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Octo.MapValue)
  // map<fixed32, .Octo.GenericValue> entries = 1;
  {
    ::google::protobuf::scoped_ptr<MapValue_EntriesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::Octo::GenericValue >::const_iterator
        it = this->entries().begin();
        it != this->entries().end(); ++it) {
      entry.reset(entries_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessage(
          1, *entry, output);
    }
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:Octo.MapValue)
}

int MapValue::ByteSize() const {
  int total_size = 0;

  // map<fixed32, .Octo.GenericValue> entries = 1;
  total_size += 1 * this->entries_size();
  {
    ::google::protobuf::scoped_ptr<MapValue_EntriesEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::Octo::GenericValue >::const_iterator
        it = this->entries().begin();
        it != this->entries().end(); ++it) {
      entry.reset(entries_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MapValue*>(&from));
}

void MapValue::MergeFrom(const MapValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entries_.MergeFrom(from.entries_);
  mutable_unknown_fields()->append(from.unknown_fields());
}

void MapValue::CopyFrom(const MapValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapValue::IsInitialized() const {

  return true;
}

void MapValue::Swap(MapValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapValue::InternalSwap(MapValue* other) {
  entries_.Swap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string MapValue::GetTypeName() const {
  return "Octo.MapValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MapValue

// map<fixed32, .Octo.GenericValue> entries = 1;
int MapValue::entries_size() const {
  return entries_.size();
}
void MapValue::clear_entries() {
  entries_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::Octo::GenericValue >&
MapValue::entries() const {
  // @@protoc_insertion_point(field_map:Octo.MapValue.entries)
  return entries_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::Octo::GenericValue >*
MapValue::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_map:Octo.MapValue.entries)
  return entries_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int SMapValue::kEntriesFieldNumber;
#endif  // !_MSC_VER

SMapValue::SMapValue()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Octo.SMapValue)
}

void SMapValue::InitAsDefaultInstance() {
}

SMapValue::SMapValue(const SMapValue& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Octo.SMapValue)
}

void SMapValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SMapValue::~SMapValue() {
  // @@protoc_insertion_point(destructor:Octo.SMapValue)
  SharedDtor();
}

void SMapValue::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void SMapValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const SMapValue& SMapValue::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_GenericValue_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_GenericValue_2eproto();
#endif
  return *default_instance_;
}

SMapValue* SMapValue::default_instance_ = NULL;

SMapValue* SMapValue::New(::google::protobuf::Arena* arena) const {
  SMapValue* n = new SMapValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SMapValue::Clear() {
  entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SMapValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:Octo.SMapValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .Octo.GenericValue> entries = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entries:
          ::google::protobuf::scoped_ptr<SMapValue_EntriesEntry> entry(entries_.NewEntry());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, entry.get()));
          (*mutable_entries())[entry->key()].Swap(entry->mutable_value());
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Octo.SMapValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Octo.SMapValue)
  return false;
#undef DO_
}

void SMapValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Octo.SMapValue)
  // map<string, .Octo.GenericValue> entries = 1;
  {
    ::google::protobuf::scoped_ptr<SMapValue_EntriesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::Octo::GenericValue >::const_iterator
        it = this->entries().begin();
        it != this->entries().end(); ++it) {
      entry.reset(entries_.NewEntryWrapper(it->first, it->second));
      ::google::protobuf::internal::WireFormatLite::WriteMessage(
          1, *entry, output);
    }
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:Octo.SMapValue)
}

int SMapValue::ByteSize() const {
  int total_size = 0;

  // map<string, .Octo.GenericValue> entries = 1;
  total_size += 1 * this->entries_size();
  {
    ::google::protobuf::scoped_ptr<SMapValue_EntriesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::Octo::GenericValue >::const_iterator
        it = this->entries().begin();
        it != this->entries().end(); ++it) {
      entry.reset(entries_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SMapValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const SMapValue*>(&from));
}

void SMapValue::MergeFrom(const SMapValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entries_.MergeFrom(from.entries_);
  mutable_unknown_fields()->append(from.unknown_fields());
}

void SMapValue::CopyFrom(const SMapValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMapValue::IsInitialized() const {

  return true;
}

void SMapValue::Swap(SMapValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SMapValue::InternalSwap(SMapValue* other) {
  entries_.Swap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string SMapValue::GetTypeName() const {
  return "Octo.SMapValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SMapValue

// map<string, .Octo.GenericValue> entries = 1;
int SMapValue::entries_size() const {
  return entries_.size();
}
void SMapValue::clear_entries() {
  entries_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::Octo::GenericValue >&
SMapValue::entries() const {
  // @@protoc_insertion_point(field_map:Octo.SMapValue.entries)
  return entries_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::Octo::GenericValue >*
SMapValue::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_map:Octo.SMapValue.entries)
  return entries_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int GenericValue::kStringFieldNumber;
const int GenericValue::kBytesFieldNumber;
const int GenericValue::kInt32FieldNumber;
const int GenericValue::kInt64FieldNumber;
const int GenericValue::kBooleanFieldNumber;
const int GenericValue::kRealFieldNumber;
const int GenericValue::kMapFieldNumber;
const int GenericValue::kStrMapFieldNumber;
const int GenericValue::kListFieldNumber;
const int GenericValue::kIntListFieldNumber;
const int GenericValue::kStrListFieldNumber;
#endif  // !_MSC_VER

GenericValue::GenericValue()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Octo.GenericValue)
}

void GenericValue::InitAsDefaultInstance() {
}

GenericValue::GenericValue(const GenericValue& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Octo.GenericValue)
}

void GenericValue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_value();
}

GenericValue::~GenericValue() {
  // @@protoc_insertion_point(destructor:Octo.GenericValue)
  SharedDtor();
}

void GenericValue::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void GenericValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const GenericValue& GenericValue::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_GenericValue_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_GenericValue_2eproto();
#endif
  return *default_instance_;
}

GenericValue* GenericValue::default_instance_ = NULL;

GenericValue* GenericValue::New(::google::protobuf::Arena* arena) const {
  GenericValue* n = new GenericValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericValue::clear_value() {
  switch(value_case()) {
    case kString: {
      value_.string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBytes: {
      value_.bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kInt32: {
      // No need to clear
      break;
    }
    case kInt64: {
      // No need to clear
      break;
    }
    case kBoolean: {
      // No need to clear
      break;
    }
    case kReal: {
      // No need to clear
      break;
    }
    case kMap: {
      delete value_.map_;
      break;
    }
    case kStrMap: {
      delete value_.str_map_;
      break;
    }
    case kList: {
      delete value_.list_;
      break;
    }
    case kIntList: {
      delete value_.int_list_;
      break;
    }
    case kStrList: {
      delete value_.str_list_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void GenericValue::Clear() {
  clear_value();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GenericValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:Octo.GenericValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string string = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bytes;
        break;
      }

      // optional bytes bytes = 2;
      case 2: {
        if (tag == 18) {
         parse_bytes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_int32;
        break;
      }

      // optional int32 int32 = 3;
      case 3: {
        if (tag == 24) {
         parse_int32:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_.int32_)));
          set_has_int32();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_int64;
        break;
      }

      // optional int64 int64 = 5;
      case 5: {
        if (tag == 40) {
         parse_int64:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int64_)));
          set_has_int64();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_boolean;
        break;
      }

      // optional bool boolean = 7;
      case 7: {
        if (tag == 56) {
         parse_boolean:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.boolean_)));
          set_has_boolean();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_real;
        break;
      }

      // optional double real = 8;
      case 8: {
        if (tag == 65) {
         parse_real:
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.real_)));
          set_has_real();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_map;
        break;
      }

      // optional .Octo.MapValue map = 10;
      case 10: {
        if (tag == 82) {
         parse_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_str_map;
        break;
      }

      // optional .Octo.SMapValue str_map = 11;
      case 11: {
        if (tag == 90) {
         parse_str_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_str_map()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_list;
        break;
      }

      // optional .Octo.ListValue list = 12;
      case 12: {
        if (tag == 98) {
         parse_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_int_list;
        break;
      }

      // optional .Octo.Int64ListValue int_list = 13;
      case 13: {
        if (tag == 106) {
         parse_int_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_int_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_str_list;
        break;
      }

      // optional .Octo.StringListValue str_list = 14;
      case 14: {
        if (tag == 114) {
         parse_str_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_str_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Octo.GenericValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Octo.GenericValue)
  return false;
#undef DO_
}

void GenericValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Octo.GenericValue)
  // optional string string = 1;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string(), output);
  }

  // optional bytes bytes = 2;
  if (has_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->bytes(), output);
  }

  // optional int32 int32 = 3;
  if (has_int32()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->int32(), output);
  }

  // optional int64 int64 = 5;
  if (has_int64()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->int64(), output);
  }

  // optional bool boolean = 7;
  if (has_boolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->boolean(), output);
  }

  // optional double real = 8;
  if (has_real()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->real(), output);
  }

  // optional .Octo.MapValue map = 10;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, *value_.map_, output);
  }

  // optional .Octo.SMapValue str_map = 11;
  if (has_str_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, *value_.str_map_, output);
  }

  // optional .Octo.ListValue list = 12;
  if (has_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, *value_.list_, output);
  }

  // optional .Octo.Int64ListValue int_list = 13;
  if (has_int_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, *value_.int_list_, output);
  }

  // optional .Octo.StringListValue str_list = 14;
  if (has_str_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14, *value_.str_list_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:Octo.GenericValue)
}

int GenericValue::ByteSize() const {
  int total_size = 0;

  switch (value_case()) {
    // optional string string = 1;
    case kString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string());
      break;
    }
    // optional bytes bytes = 2;
    case kBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes());
      break;
    }
    // optional int32 int32 = 3;
    case kInt32: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int32());
      break;
    }
    // optional int64 int64 = 5;
    case kInt64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64());
      break;
    }
    // optional bool boolean = 7;
    case kBoolean: {
      total_size += 1 + 1;
      break;
    }
    // optional double real = 8;
    case kReal: {
      total_size += 1 + 8;
      break;
    }
    // optional .Octo.MapValue map = 10;
    case kMap: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.map_);
      break;
    }
    // optional .Octo.SMapValue str_map = 11;
    case kStrMap: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.str_map_);
      break;
    }
    // optional .Octo.ListValue list = 12;
    case kList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.list_);
      break;
    }
    // optional .Octo.Int64ListValue int_list = 13;
    case kIntList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.int_list_);
      break;
    }
    // optional .Octo.StringListValue str_list = 14;
    case kStrList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.str_list_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericValue::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const GenericValue*>(&from));
}

void GenericValue::MergeFrom(const GenericValue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.value_case()) {
    case kString: {
      set_string(from.string());
      break;
    }
    case kBytes: {
      set_bytes(from.bytes());
      break;
    }
    case kInt32: {
      set_int32(from.int32());
      break;
    }
    case kInt64: {
      set_int64(from.int64());
      break;
    }
    case kBoolean: {
      set_boolean(from.boolean());
      break;
    }
    case kReal: {
      set_real(from.real());
      break;
    }
    case kMap: {
      mutable_map()->::Octo::MapValue::MergeFrom(from.map());
      break;
    }
    case kStrMap: {
      mutable_str_map()->::Octo::SMapValue::MergeFrom(from.str_map());
      break;
    }
    case kList: {
      mutable_list()->::Octo::ListValue::MergeFrom(from.list());
      break;
    }
    case kIntList: {
      mutable_int_list()->::Octo::Int64ListValue::MergeFrom(from.int_list());
      break;
    }
    case kStrList: {
      mutable_str_list()->::Octo::StringListValue::MergeFrom(from.str_list());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void GenericValue::CopyFrom(const GenericValue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericValue::IsInitialized() const {

  return true;
}

void GenericValue::Swap(GenericValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericValue::InternalSwap(GenericValue* other) {
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string GenericValue::GetTypeName() const {
  return "Octo.GenericValue";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GenericValue

// optional string string = 1;
bool GenericValue::has_string() const {
  return value_case() == kString;
}
void GenericValue::set_has_string() {
  _oneof_case_[0] = kString;
}
void GenericValue::clear_string() {
  if (has_string()) {
    value_.string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
 const ::std::string& GenericValue::string() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.string)
  if (has_string()) {
    return value_.string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void GenericValue::set_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Octo.GenericValue.string)
  if (!has_string()) {
    clear_value();
    set_has_string();
    value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Octo.GenericValue.string)
}
 void GenericValue::set_string(const char* value) {
  if (!has_string()) {
    clear_value();
    set_has_string();
    value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Octo.GenericValue.string)
}
 void GenericValue::set_string(const char* value, size_t size) {
  if (!has_string()) {
    clear_value();
    set_has_string();
    value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Octo.GenericValue.string)
}
 ::std::string* GenericValue::mutable_string() {
  if (!has_string()) {
    clear_value();
    set_has_string();
    value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:Octo.GenericValue.string)
  return value_.string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GenericValue::release_string() {
  if (has_string()) {
    clear_has_value();
    return value_.string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void GenericValue::set_allocated_string(::std::string* string) {
  if (!has_string()) {
    value_.string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string != NULL) {
    set_has_string();
    value_.string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string);
  }
  // @@protoc_insertion_point(field_set_allocated:Octo.GenericValue.string)
}

// optional bytes bytes = 2;
bool GenericValue::has_bytes() const {
  return value_case() == kBytes;
}
void GenericValue::set_has_bytes() {
  _oneof_case_[0] = kBytes;
}
void GenericValue::clear_bytes() {
  if (has_bytes()) {
    value_.bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
 const ::std::string& GenericValue::bytes() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.bytes)
  if (has_bytes()) {
    return value_.bytes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
 void GenericValue::set_bytes(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Octo.GenericValue.bytes)
  if (!has_bytes()) {
    clear_value();
    set_has_bytes();
    value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Octo.GenericValue.bytes)
}
 void GenericValue::set_bytes(const char* value) {
  if (!has_bytes()) {
    clear_value();
    set_has_bytes();
    value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Octo.GenericValue.bytes)
}
 void GenericValue::set_bytes(const void* value, size_t size) {
  if (!has_bytes()) {
    clear_value();
    set_has_bytes();
    value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Octo.GenericValue.bytes)
}
 ::std::string* GenericValue::mutable_bytes() {
  if (!has_bytes()) {
    clear_value();
    set_has_bytes();
    value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:Octo.GenericValue.bytes)
  return value_.bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GenericValue::release_bytes() {
  if (has_bytes()) {
    clear_has_value();
    return value_.bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
 void GenericValue::set_allocated_bytes(::std::string* bytes) {
  if (!has_bytes()) {
    value_.bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (bytes != NULL) {
    set_has_bytes();
    value_.bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        bytes);
  }
  // @@protoc_insertion_point(field_set_allocated:Octo.GenericValue.bytes)
}

// optional int32 int32 = 3;
bool GenericValue::has_int32() const {
  return value_case() == kInt32;
}
void GenericValue::set_has_int32() {
  _oneof_case_[0] = kInt32;
}
void GenericValue::clear_int32() {
  if (has_int32()) {
    value_.int32_ = 0;
    clear_has_value();
  }
}
 ::google::protobuf::int32 GenericValue::int32() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.int32)
  if (has_int32()) {
    return value_.int32_;
  }
  return 0;
}
 void GenericValue::set_int32(::google::protobuf::int32 value) {
  if (!has_int32()) {
    clear_value();
    set_has_int32();
  }
  value_.int32_ = value;
  // @@protoc_insertion_point(field_set:Octo.GenericValue.int32)
}

// optional int64 int64 = 5;
bool GenericValue::has_int64() const {
  return value_case() == kInt64;
}
void GenericValue::set_has_int64() {
  _oneof_case_[0] = kInt64;
}
void GenericValue::clear_int64() {
  if (has_int64()) {
    value_.int64_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
 ::google::protobuf::int64 GenericValue::int64() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.int64)
  if (has_int64()) {
    return value_.int64_;
  }
  return GOOGLE_LONGLONG(0);
}
 void GenericValue::set_int64(::google::protobuf::int64 value) {
  if (!has_int64()) {
    clear_value();
    set_has_int64();
  }
  value_.int64_ = value;
  // @@protoc_insertion_point(field_set:Octo.GenericValue.int64)
}

// optional bool boolean = 7;
bool GenericValue::has_boolean() const {
  return value_case() == kBoolean;
}
void GenericValue::set_has_boolean() {
  _oneof_case_[0] = kBoolean;
}
void GenericValue::clear_boolean() {
  if (has_boolean()) {
    value_.boolean_ = false;
    clear_has_value();
  }
}
 bool GenericValue::boolean() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.boolean)
  if (has_boolean()) {
    return value_.boolean_;
  }
  return false;
}
 void GenericValue::set_boolean(bool value) {
  if (!has_boolean()) {
    clear_value();
    set_has_boolean();
  }
  value_.boolean_ = value;
  // @@protoc_insertion_point(field_set:Octo.GenericValue.boolean)
}

// optional double real = 8;
bool GenericValue::has_real() const {
  return value_case() == kReal;
}
void GenericValue::set_has_real() {
  _oneof_case_[0] = kReal;
}
void GenericValue::clear_real() {
  if (has_real()) {
    value_.real_ = 0;
    clear_has_value();
  }
}
 double GenericValue::real() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.real)
  if (has_real()) {
    return value_.real_;
  }
  return 0;
}
 void GenericValue::set_real(double value) {
  if (!has_real()) {
    clear_value();
    set_has_real();
  }
  value_.real_ = value;
  // @@protoc_insertion_point(field_set:Octo.GenericValue.real)
}

// optional .Octo.MapValue map = 10;
bool GenericValue::has_map() const {
  return value_case() == kMap;
}
void GenericValue::set_has_map() {
  _oneof_case_[0] = kMap;
}
void GenericValue::clear_map() {
  if (has_map()) {
    delete value_.map_;
    clear_has_value();
  }
}
 const ::Octo::MapValue& GenericValue::map() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.map)
  return has_map()
      ? *value_.map_
      : ::Octo::MapValue::default_instance();
}
::Octo::MapValue* GenericValue::mutable_map() {
  if (!has_map()) {
    clear_value();
    set_has_map();
    value_.map_ = new ::Octo::MapValue;
  }
  // @@protoc_insertion_point(field_mutable:Octo.GenericValue.map)
  return value_.map_;
}
::Octo::MapValue* GenericValue::release_map() {
  if (has_map()) {
    clear_has_value();
    ::Octo::MapValue* temp = value_.map_;
    value_.map_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GenericValue::set_allocated_map(::Octo::MapValue* map) {
  clear_value();
  if (map) {
    set_has_map();
    value_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:Octo.GenericValue.map)
}

// optional .Octo.SMapValue str_map = 11;
bool GenericValue::has_str_map() const {
  return value_case() == kStrMap;
}
void GenericValue::set_has_str_map() {
  _oneof_case_[0] = kStrMap;
}
void GenericValue::clear_str_map() {
  if (has_str_map()) {
    delete value_.str_map_;
    clear_has_value();
  }
}
 const ::Octo::SMapValue& GenericValue::str_map() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.str_map)
  return has_str_map()
      ? *value_.str_map_
      : ::Octo::SMapValue::default_instance();
}
::Octo::SMapValue* GenericValue::mutable_str_map() {
  if (!has_str_map()) {
    clear_value();
    set_has_str_map();
    value_.str_map_ = new ::Octo::SMapValue;
  }
  // @@protoc_insertion_point(field_mutable:Octo.GenericValue.str_map)
  return value_.str_map_;
}
::Octo::SMapValue* GenericValue::release_str_map() {
  if (has_str_map()) {
    clear_has_value();
    ::Octo::SMapValue* temp = value_.str_map_;
    value_.str_map_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GenericValue::set_allocated_str_map(::Octo::SMapValue* str_map) {
  clear_value();
  if (str_map) {
    set_has_str_map();
    value_.str_map_ = str_map;
  }
  // @@protoc_insertion_point(field_set_allocated:Octo.GenericValue.str_map)
}

// optional .Octo.ListValue list = 12;
bool GenericValue::has_list() const {
  return value_case() == kList;
}
void GenericValue::set_has_list() {
  _oneof_case_[0] = kList;
}
void GenericValue::clear_list() {
  if (has_list()) {
    delete value_.list_;
    clear_has_value();
  }
}
 const ::Octo::ListValue& GenericValue::list() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.list)
  return has_list()
      ? *value_.list_
      : ::Octo::ListValue::default_instance();
}
::Octo::ListValue* GenericValue::mutable_list() {
  if (!has_list()) {
    clear_value();
    set_has_list();
    value_.list_ = new ::Octo::ListValue;
  }
  // @@protoc_insertion_point(field_mutable:Octo.GenericValue.list)
  return value_.list_;
}
::Octo::ListValue* GenericValue::release_list() {
  if (has_list()) {
    clear_has_value();
    ::Octo::ListValue* temp = value_.list_;
    value_.list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GenericValue::set_allocated_list(::Octo::ListValue* list) {
  clear_value();
  if (list) {
    set_has_list();
    value_.list_ = list;
  }
  // @@protoc_insertion_point(field_set_allocated:Octo.GenericValue.list)
}

// optional .Octo.Int64ListValue int_list = 13;
bool GenericValue::has_int_list() const {
  return value_case() == kIntList;
}
void GenericValue::set_has_int_list() {
  _oneof_case_[0] = kIntList;
}
void GenericValue::clear_int_list() {
  if (has_int_list()) {
    delete value_.int_list_;
    clear_has_value();
  }
}
 const ::Octo::Int64ListValue& GenericValue::int_list() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.int_list)
  return has_int_list()
      ? *value_.int_list_
      : ::Octo::Int64ListValue::default_instance();
}
::Octo::Int64ListValue* GenericValue::mutable_int_list() {
  if (!has_int_list()) {
    clear_value();
    set_has_int_list();
    value_.int_list_ = new ::Octo::Int64ListValue;
  }
  // @@protoc_insertion_point(field_mutable:Octo.GenericValue.int_list)
  return value_.int_list_;
}
::Octo::Int64ListValue* GenericValue::release_int_list() {
  if (has_int_list()) {
    clear_has_value();
    ::Octo::Int64ListValue* temp = value_.int_list_;
    value_.int_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GenericValue::set_allocated_int_list(::Octo::Int64ListValue* int_list) {
  clear_value();
  if (int_list) {
    set_has_int_list();
    value_.int_list_ = int_list;
  }
  // @@protoc_insertion_point(field_set_allocated:Octo.GenericValue.int_list)
}

// optional .Octo.StringListValue str_list = 14;
bool GenericValue::has_str_list() const {
  return value_case() == kStrList;
}
void GenericValue::set_has_str_list() {
  _oneof_case_[0] = kStrList;
}
void GenericValue::clear_str_list() {
  if (has_str_list()) {
    delete value_.str_list_;
    clear_has_value();
  }
}
 const ::Octo::StringListValue& GenericValue::str_list() const {
  // @@protoc_insertion_point(field_get:Octo.GenericValue.str_list)
  return has_str_list()
      ? *value_.str_list_
      : ::Octo::StringListValue::default_instance();
}
::Octo::StringListValue* GenericValue::mutable_str_list() {
  if (!has_str_list()) {
    clear_value();
    set_has_str_list();
    value_.str_list_ = new ::Octo::StringListValue;
  }
  // @@protoc_insertion_point(field_mutable:Octo.GenericValue.str_list)
  return value_.str_list_;
}
::Octo::StringListValue* GenericValue::release_str_list() {
  if (has_str_list()) {
    clear_has_value();
    ::Octo::StringListValue* temp = value_.str_list_;
    value_.str_list_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GenericValue::set_allocated_str_list(::Octo::StringListValue* str_list) {
  clear_value();
  if (str_list) {
    set_has_str_list();
    value_.str_list_ = str_list;
  }
  // @@protoc_insertion_point(field_set_allocated:Octo.GenericValue.str_list)
}

bool GenericValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void GenericValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
GenericValue::ValueCase GenericValue::value_case() const {
  return GenericValue::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Octo

// @@protoc_insertion_point(global_scope)
